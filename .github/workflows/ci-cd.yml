name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  tests:
    name: Test runner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Set up JDK@21
        uses: actions/setup-java@v4.7.0
        with:
          distribution: 'adopt'
          java-version: '21'
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}
      - name: Run application tests
        run: mvn clean test -Dspring.profiles.active=unit-test
      - name: Validate Process Test Coverage = 100% Per Report.json
        run: |
          set -e
          echo "Validating individual coverage for each report.json..."

          failed=0

          for json in target/process-test-coverage/*/report.json; do
            echo "Checking $json"

            covered=$(jq -r '[.suites[].runs[].events[].definitionKey] | unique | length' "$json")
            expected=$(jq -r '.models[].totalElementCount' "$json")

            if [ "$expected" -eq 0 ]; then
              echo "⚠️  Skipping $json: No expected elements found"
              continue
            fi

            percent=$((100 * covered / expected))

            echo "Covered elements: $covered / Expected: $expected => ${percent}%"

            if [ "$percent" -lt 100 ]; then
              echo "❌ Coverage too low for $json: ${percent}%"
              failed=1
            else
              echo "✅ Coverage OK for $json: ${percent}%"
            fi
          done

          if [ "$failed" -eq 1 ]; then
            echo "❌ One or more test files did not reach 100% coverage."
            exit 1
          else
            echo "✅ All test files passed the 100% coverage threshold."
          fi

  build:
    name: Build runner
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Set up JDK@21
        uses: actions/setup-java@v4.7.0
        with:
          distribution: 'adopt'
          java-version: '21'
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}
      - name: Export environment secrets
        run: |
            echo "CAMUNDA_CLIENT_ID=${{ secrets.CAMUNDA_CLIENT_ID }}" >> $GITHUB_ENV
            echo "CAMUNDA_CLIENT_SECRET=${{ secrets.CAMUNDA_CLIENT_SECRET }}" >> $GITHUB_ENV
            echo "CAMUNDA_CLUSTER_ID=${{ secrets.CAMUNDA_CLUSTER_ID }}" >> $GITHUB_ENV
            echo "CAMUNDA_CLUSTER_REGION=${{ secrets.CAMUNDA_CLUSTER_REGION }}" >> $GITHUB_ENV
      - name: Build with Maven
        run: mvn package -Dmaven.test.skip=true --file pom.xml
      - name: Run with Maven
        run: mvn spring-boot:run
